#!/bin/mksh
#
# Riot, a from-source package manager for Mutiny Linux.
#
# Copyright (c) 2016 Kylie McClain <kylie@somasis.com>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

. "@libdir@/riot/internal_functions.sh"

ALLOWED_VARIABLES+=( JOBS PHASE )

riot_install_phases="pkg_init src_fetch src_unpack src_prepare src_configure src_compile src_test src_install pkg_premerge pkg_merge pkg_postmerge"
riot_uninstall_phases="pkg_init pkg_premerge pkg_unmerge pkg_postmerge"

riot_debug=false
riot_verbose=false
riot_quiet=false
JOBS=$(riot_jobs)
PHASE=

cd /

riot_version() {
    printf 'Riot %s\n' "@version@"
}

riot_help() {
    printf 'usage: riot [-c <always|auto|never>] [-j jobs] [-dqv] <action> [pkgs]\n\n'
    printf '%s: %s\n'   \
        "default build directory"       "${BUILDDIR}"      \
        "default cache directory"       "${CACHEDIR}"      \
        "default install directory"     "${INSTALLDIR}"    \
        "default package directory"     "${REPODIR}"
}

riot_invalid() {
    printf 'riot: %s: unknown %s\n' "${1}" "${2:-command}" >&2
    exit 127
}

riot_color_init auto

while getopts :c:j:dqv opt;do
    case "${opt}" in
        c)
            riot_color_init "${OPTARG}"
        ;;
        j)
            case "${OPTARG}" in
                [0-9]*)
                    JOBS="${OPTARG}"
                ;;
                *)
                    riot_invalid "-j: ${OPTARG}" "number"
                ;;
            esac
        ;;
        v)
            riot_verbose=true
        ;;
        d)
            riot_debug=true
        ;;
        q)
            riot_quiet=true
        ;;
    esac
done

shift $(( OPTIND - 1 ))

riot_initialize

case "${1:-help}" in
    add|install)
        shift
        riot_mode=install
        riot_mode_install "$@"
    ;;
    remove|uninstall)
        shift
        riot_mode=uninstall
        riot_mode_uninstall "$@"
    ;;
    info)
        shift
        riot_mode_info "$@"
    ;;
    files)
        shift
        riot_mode_files "$@"
    ;;
    disambiguate)
        shift
        riot_mode_disambiguate "$@"
    ;;
    version)
        riot_version
        exit 0
    ;;
    help)
        riot_help
        exit 0
    ;;
    *)
        if command -v riot-"${1}" >/dev/null 2>&1;then
            riot-"${1}"
            exit $?
        else
            riot_invalid "$1"
        fi
    ;;
esac

