#!/bin/sh
# musl#1.1.15:slot::mutiny = no disambiguation done
# musl:slot                = determine version and repository
# musl#1.1.15              = determine repository and slot
# musl::mutiny             = determine version and slot
# musl                     = determine version, slot, and repository

case "${spec}" in
    *#*:*::*) # musl#1.1.15:slot::mutiny = no disambiguation needed
        repository=${spec##*::}
        spec=${spec%::*} # musl-libc#1.1.15:0
        pn=${spec%%#*}
        spec=${spec#*#} # 1.1.15:0
        pv=${spec%:*}
        slot=${spec#*:}
        file="${REPODIR}"/"${repository}"/packages/${pn}/${pn}#${pv}.pkg
    ;;
    *#*::*) # musl-libc#1.1.15::mutiny; need slot
        repository=${spec##*::}
        pn=${spec%%#*}
        spec=${spec#*#} # 1.1.15::mutiny
        pv=${spec%::*}
        file="${REPODIR}"/${repository}/packages/${pn}/${pn}#${pv}.pkg
        [ -f "${file}" ] || die "Can't disambiguate \"${1}\"; no results."
        slot=$(riot_source_file "${file}" && printf '%s' ${SLOT})
    ;;
    *:*::*) # musl-libc:0::mutiny; need pv
        repository=${spec##*::}
        pn=${spec%%:*}
        spec=${spec#*:}
        slot=${spec%::*}
        local versions v
        for file in "${REPODIR}"/${repository}/packages/${pn}/${pn}#*.pkg; do
            [ -f "${file}" ] || die "Can't disambiguate \"${1}\"; no results."
            v=${file##*#}
            v=${v%.pkg}
            if [ "$(riot_source_file "${file}"; printf '%s' ${SLOT})" = "${slot}" ];then
                versions+=( "${v}" )
            fi
        done
        [ -n "${versions[0]}" ] || die "Can't disambiguate \"${1}\"; no versions have this slot."
    ;;
    *::*) # musl-libc::mutiny, need pv, slot
        repository=${spec##*::}
        pn=${spec%%::*}
        local versions versions_vercmp v newest
        for file in "${REPODIR}"/${repository}/packages/${pn}/${pn}#*.pkg;do
            [ -f "${file}" ] || die "Can't disambiguate \"${1}\"; no results."
            v=${file##*#}
            v=${v%.pkg}
            versions+=( "${v}" )
        done
        pv=$(vercmp --newest "${versions[@]}")
        slot=$(riot_source_file "${REPODIR}"/${repository}/packages/${pn}/${pn}#${pv}.pkg && printf '%s' ${SLOT})
    ;;
    *#*:*) # musl-libc#1.1.15:0, need repository
        pn=${spec%#*}
        spec=${spec#*#}
        pv=${spec%:*}
        slot=${spec#*:}
        for repository in "${REPOSITORIES[@]}";do
            file="${REPODIR}"/${repository}/packages/${pn}/${pn}#${pv}.pkg
            if [ -f "${file}" ] && [ $(riot_source_file "${file}" && printf '%s' "${SLOT}") = "${SLOT}" ];then
                break
            else
                file=
            fi
        done
        [ -n "${file}" ] || die "Can't disambiguate \"${1}\"; no results."
    ;;
    *:*) # musl-libc:0, need pv, repository
        pn=${spec%:*}
        slot=${spec#*:}
        for repository in "${REPOSITORIES[@]}";do
            file="${REPODIR}"/"${repository}"/packages/${pn}
            if [ -d "${file}" ];then
                for file in "${file}"/${pn}#*.pkg; do
                    [ -f "${file}" ] || die "Can't disambiguate \"${1}\"; no results."
                    v=${file##*#}
                    v=${v%.pkg}
                    versions+=( "${v}" )
                done
                [ $(riot_source_file "${REPODIR}"/${repository}/packages/${pn}/${pn}#${pv}.pkg && printf '%s' ${SLOT}) = "${slot}" ] && PV=$(vercmp --newest "${versions[@]}") && break
            fi
        done
    ;;
    *#*) # musl-libc#1.1.15, need slot, repository
        pn=${spec%#*}
        pv=${spec#*#}
        for repository in "${REPOSITORIES[@]}";do
            file="${REPODIR}"/"${repository}"/packages/${pn}/${pn}#${pv}.pkg
            [ -f "${file}" ] && break || file=
        done
        [ -n "${file}" ] || die "Can't disambiguate \"${1}\"; no results."
        slot=$(riot_source_file "${file}" && printf '%s' ${SLOT})
     ;;
    *) # musl-libc, need pv, slot, repository
        pn=${spec}
        local v
        for repository in "${REPOSITORIES[@]}"; do
            file="${REPODIR}"/"${repository}"/packages/${pn}
            if [ -d "${file}" ];then
                for file in "${file}"/${pn}#*.pkg; do
                    [ -f "${file}" ] || die "Can't disambiguate \"${1}\"; no results."
                    v=${file##*#}
                    v=${v%.pkg}
                    versions+=( "${v}" )
                done
                pv=$(vercmp --newest ${versions[@]})
                file="${REPODIR}"/${repository}/packages/${pn}/${pn}#${pv}.pkg
                slot=$(riot_source_file "${file}" && printf '%s' ${SLOT})
            fi
        done
        [ -n "${file}" ] || die "Can't disambiguate \"${1}\"; no results."
    ;;
esac

PN="${pn}"
PV="${pv}"
SLOT="${slot}"
REPOSITORY="${repository}"

for v in PN PV SLOT REPOSITORY;do
    if [ -z $(get_var ${v}) ];then
        die "Something went wrong while disambiguating \"${1}\"; ${v} was not set."
    fi
done

export PN="${pn}" PV="${pv}"
export FILE="${REPODIR}/${REPOSITORY}/packages/${PN}/${PN}#${PV}.pkg"
export PNV="${PN}-${PV}" SLOT="${SLOT}" REPOSITORY="${REPOSITORY}"
export SPEC="${PN}#${PV}:${SLOT}::${REPOSITORY}"
