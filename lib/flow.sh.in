#!/bin/sh

# shellcheck disable=SC2154
if [ -z "${NO_COLOR}" ]; then
	color_red=$(printf '\e[31m') # $(tput setaf 1)
	color_green=$(printf '\e[32m') # $(tput setaf 2)
	color_yellow=$(printf '\e[33m') # $(tput setaf 3)
	color_bold=$(printf '\e[1m') # $(tput bold)
	color_reset=$(printf '\e[0m') # $(tput sgr0)
fi

pdo() {
	local dry_run=false die=true
	while [ $# -gt 0 ] && [ "${1:0:1}" = '-' ]; do
		case "$1" in
			-n)
				local dry_run=true
				;;
			-d)
				local die=false
				;;
		esac
		shift
	done

	stderr "+ %s\n" "$*"
	if ! "${dry_run}"; then
		"$@" || { err_code=$?; "${die}" && perror -d "command \`%s\` exited with %s\n" "$*" "${err_code}"; }
	fi
}

pdie() {
	[ "$#" -gt 0 ] && pstderr "$@"
	exit 1
}

perror() {
	local die=false
	case "${1}" in
		-d)
			die=true
			shift
			;;
	esac

	local msg="${1}"; shift
	pstderr "${color_bold}${color_red}!!${color_reset} ${msg}" "$@"
	"${die}" && die
}

pwarning() {
	local msg="${1}"; shift
	pstderr "${color_bold}${color_yellow}!?${color_reset} ${msg}" "$@"
}

pinfo() {
	local msg="${1}"; shift
	stderr "${color_bold}${color_green}..${color_reset} ${msg}" "$@"
}

pstderr() {
	# shellcheck disable=SC2059
	printf "$@" >&2
}

