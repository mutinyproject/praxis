#!/bin/sh

. idioms

myusage() { usage "repo-update [-cdv] [REPOSITORY...]"; }

changes=false
dry_run=false
verbose=false

git_verbose=
git_quiet=true
while getopts :cdv arg >/dev/null 2>&1; do
    case "${arg}" in
        c)
            changes=true
            ;;
        d)
            dry_run=true
            _idioms_call_dry_run=true
            ;;
        v)
            verbose=true
            git_verbose=true
            git_quiet=
            ;;
        ?)
            error "unknown argument -- ${OPTARG}"
            myusage
            ;;
    esac
done
shift $(( OPTIND - 1 ))

call=
"${verbose}" && call="call"
"${dry_run}" || [ -w "@@dbdir@@"/repositories ] ||
    die 1 "can't write to repositories directory '@@dbdir@@/repositories'"

cd "@@dbdir@@"/repositories ||
    die 1 "can't change to repositories directory '@@dbdir@@/repositories'"

# We want to split on words here. Whitespace is not allowed a repository name.
# shellcheck disable=SC2046
[ $# -gt 0 ] || set -- $(repo-list)

while [ $# -gt 0 ]; do
    [ -d "${1}" ] || die 1 "'${1}' is not a repository"

    if [ -x "${1}"/.git ] && [ -d "${1}"/.git ]; then
        repo_branch=$(git -C "${1}" rev-parse --abbrev-ref HEAD)
        ${call} git -C "${1}" fetch ${git_quiet:+-q} ${git_verbose:+-v} origin "${repo_branch}"

        if "${changes}" && [ "$(git -C "${1}" log --oneline '..@{u}' | wc -l)" -gt 0 ]; then
            before_date=$(git -C "${1}" show -s --format=%cd --date=human-local HEAD)
            printf 'Changes in %s since %s:\n' "${1}" "${before_date}"
            PAGER='cat' ${call} git -C "${1}" log \
                --reverse \
                --format="$(printf '\t%s' '%C(yellow)%h%C(reset) %s (%aN <%aE>)')" \
                '..@{u}'
        fi

        ${call} git -C "${1}" reset --hard ${git_quiet:+-q} origin/"${repo_branch}"
    else
        warn "unsure of how to update '${1}'"
    fi

    shift
done

for repo in $(repo-list -l | tac); do
    set -- "$@" "@@dbdir@@/repositories/${repo}/libraries"
done

if [ "$#" -gt 0 ]; then
    ${call} s6-update-symlinks "@@dbdir@@/libraries" "$@"
fi

for repo in $(repo-list -p | tac); do
    set -- "$@" "@@dbdir@@/repositories/${repo}/packages"
done

if [ "$#" -gt 0 ]; then
    ${call} s6-update-symlinks "@@dbdir@@/packages" "$@"
fi
